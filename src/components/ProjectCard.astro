---
// ProjectCard component for displaying project previews
import type { CollectionEntry } from 'astro:content';

export interface Props {
  project: CollectionEntry<'projects'>;
  class?: string;
}

const { project, class: className = '' } = Astro.props;
const { title, description, technologies, liveUrl, githubUrl, images } = project.data;

// Format date for display
const formatDate = (date: Date) => {
  return new Intl.DateTimeFormat('en-US', {
    year: 'numeric',
    month: 'long'
  }).format(date);
};
---

<article class={`project-card ${className}`}>
  <!-- Project Image -->
  {images && images.length > 0 && (
    <div class="project-image">
      <img 
        src={images[0]} 
        alt={`Screenshot of ${title} project showing the main interface`}
        class="project-img"
        onload="console.log('Image loaded successfully:', this.src);"
        onerror="console.log('Image failed to load:', this.src); this.parentElement.style.display='none'; this.parentElement.parentElement.classList.add('no-image');"
      />
      <div class="image-fallback" style="display: none;">
        <svg class="fallback-icon" width="48" height="48" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="1.5" aria-hidden="true">
          <rect x="3" y="3" width="18" height="18" rx="2" ry="2"/>
          <circle cx="8.5" cy="8.5" r="1.5"/>
          <polyline points="21,15 16,10 5,21"/>
        </svg>
        <span class="fallback-text">Image not available</span>
      </div>
    </div>
  )}
  
  <!-- Fallback for projects without images -->
  {(!images || images.length === 0) && (
    <div class="project-image project-image-placeholder">
      <div class="image-fallback" role="img" aria-label={`No preview image available for ${title} project`}>
        <svg class="fallback-icon" width="48" height="48" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="1.5" aria-hidden="true">
          <rect x="3" y="3" width="18" height="18" rx="2" ry="2"/>
          <circle cx="8.5" cy="8.5" r="1.5"/>
          <polyline points="21,15 16,10 5,21"/>
        </svg>
        <span class="fallback-text">No preview available</span>
      </div>
    </div>
  )}
  
  <!-- Project Content -->
  <div class="project-content">
    <div class="project-header">
      <h3 class="project-title">
        <a href={`/projects/${project.slug}`} class="project-link">
          {title}
        </a>
      </h3>
      <time class="project-date" datetime={project.data.publishDate.toISOString()}>
        {formatDate(project.data.publishDate)}
      </time>
    </div>
    
    <p class="project-description">
      {description}
    </p>
    
    <!-- Technologies -->
    {technologies && technologies.length > 0 && (
      <div class="project-technologies">
        {technologies.map((tech) => (
          <span class="tech-badge">{tech}</span>
        ))}
      </div>
    )}
    
    <!-- Project Links -->
    <div class="project-links">
      {liveUrl && (
        <a 
          href={liveUrl} 
          class="project-link-btn btn-primary"
          target="_blank"
          rel="noopener noreferrer"
          aria-label={`View ${title} live demo`}
        >
          <svg class="link-icon" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" aria-hidden="true">
            <path d="M18 13v6a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h6"/>
            <polyline points="15,3 21,3 21,9"/>
            <line x1="10" y1="14" x2="21" y2="3"/>
          </svg>
          Live Demo
        </a>
      )}
      
      {githubUrl && (
        <a 
          href={githubUrl} 
          class="project-link-btn btn-secondary"
          target="_blank"
          rel="noopener noreferrer"
          aria-label={`View ${title} source code`}
        >
          <svg class="link-icon" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" aria-hidden="true">
            <path d="M9 19c-5 1.5-5-2.5-7-3m14 6v-3.87a3.37 3.37 0 0 0-.94-2.61c3.14-.35 6.44-1.54 6.44-7A5.44 5.44 0 0 0 20 4.77 5.07 5.07 0 0 0 19.91 1S18.73.65 16 2.48a13.38 13.38 0 0 0-7 0C6.27.65 5.09 1 5.09 1A5.07 5.07 0 0 0 5 4.77a5.44 5.44 0 0 0-1.5 3.78c0 5.42 3.3 6.61 6.44 7A3.37 3.37 0 0 0 9 18.13V22"/>
          </svg>
          Source Code
        </a>
      )}
    </div>
  </div>
</article>

<style>
  .project-card {
    background-color: var(--color-bg-secondary);
    border: 1px solid var(--color-border);
    border-radius: var(--radius-xl);
    overflow: hidden;
    transition: all var(--transition-base);
    height: 100%;
    display: flex;
    flex-direction: column;
  }

  .project-card:hover {
    border-color: var(--color-border-light);
    transform: translateY(-4px);
    box-shadow: var(--shadow-lg);
  }

  .project-image {
    position: relative;
    width: 100%;
    height: 200px;
    overflow: hidden;
    background-color: var(--color-bg-tertiary);
  }

  .project-img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform var(--transition-base);
    position: relative;
    z-index: 1;
    display: block;
  }

  .project-card:hover .project-img {
    transform: scale(1.05);
  }

  .project-content {
    padding: var(--space-6);
    display: flex;
    flex-direction: column;
    flex-grow: 1;
  }

  .project-header {
    display: flex;
    justify-content: space-between;
    align-items: flex-start;
    gap: var(--space-4);
    margin-bottom: var(--space-4);
  }

  .project-title {
    font-size: var(--text-xl);
    font-weight: var(--font-semibold);
    margin: 0;
    flex-grow: 1;
  }

  .project-link {
    color: var(--color-text-primary);
    text-decoration: none;
    transition: color var(--transition-fast);
  }

  .project-link:hover {
    color: var(--color-accent);
  }

  .project-date {
    font-size: var(--text-sm);
    color: var(--color-text-muted);
    white-space: nowrap;
    flex-shrink: 0;
  }

  .project-description {
    color: var(--color-text-secondary);
    line-height: var(--leading-relaxed);
    margin-bottom: var(--space-4);
    flex-grow: 1;
  }

  .project-technologies {
    display: flex;
    flex-wrap: wrap;
    gap: var(--space-2);
    margin-bottom: var(--space-6);
  }

  .tech-badge {
    display: inline-flex;
    align-items: center;
    padding: var(--space-1) var(--space-3);
    background-color: var(--color-bg-tertiary);
    color: var(--color-text-secondary);
    font-size: var(--text-sm);
    font-weight: var(--font-medium);
    border-radius: var(--radius-full);
    border: 1px solid var(--color-border);
    transition: all var(--transition-fast);
  }

  .tech-badge:hover {
    background-color: rgba(245, 194, 231, 0.1); /* --color-accent, 0.1 */
    color: var(--color-accent);
    border-color: rgba(245, 194, 231, 0.2); /* --color-accent, 0.2 */
  }

  .project-links {
    display: flex;
    gap: var(--space-3);
    margin-top: auto;
  }

  .project-link-btn {
    display: inline-flex;
    align-items: center;
    gap: var(--space-2);
    padding: var(--space-2) var(--space-4);
    border-radius: var(--radius-lg);
    font-weight: var(--font-medium);
    font-size: var(--text-sm);
    text-decoration: none;
    transition: all var(--transition-fast);
    border: 1px solid transparent;
  }

  .project-link-btn:focus-visible {
    outline: 2px solid var(--color-accent);
    outline-offset: 2px;
  }

  .btn-primary {
    background-color: var(--color-accent);
    color: var(--color-text-primary);
  }

  .btn-primary:hover {
    background-color: var(--color-accent-hover);
  }

  .btn-secondary {
    background-color: var(--color-bg-tertiary);
    color: var(--color-text-secondary);
    border-color: var(--color-border);
  }

  .btn-secondary:hover {
    background-color: var(--color-bg-primary);
    color: var(--color-text-primary);
    border-color: var(--color-border-light);
  }

  .link-icon {
    flex-shrink: 0;
  }

  /* Responsive Design */
  @media (max-width: 640px) {
    .project-content {
      padding: var(--space-4);
    }

    .project-header {
      flex-direction: column;
      align-items: flex-start;
      gap: var(--space-2);
    }

    .project-links {
      flex-direction: column;
    }

    .project-link-btn {
      justify-content: center;
    }
  }

  /* Image fallback styles */
  .image-fallback {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    height: 100%;
    color: var(--color-text-muted);
    background-color: var(--color-bg-tertiary);
  }

  .project-image-placeholder .image-fallback {
    display: flex;
  }

  .fallback-icon {
    margin-bottom: var(--space-2);
    opacity: 0.6;
  }

  .fallback-text {
    font-size: var(--text-sm);
    font-weight: var(--font-medium);
    opacity: 0.8;
  }

  /* Show fallback when image fails to load */
  .project-card.no-image .image-fallback {
    display: flex !important;
  }

  /* No image state */
  .project-card:not(:has(.project-image)) .project-content,
  .project-card.no-image .project-content {
    padding-top: var(--space-6);
  }
</style>