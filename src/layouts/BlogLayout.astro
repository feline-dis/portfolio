---
// Blog layout extending BaseLayout with article-specific features
import BaseLayout from './BaseLayout.astro';
import type { CollectionEntry } from 'astro:content';

export interface Props {
  post: CollectionEntry<'blog'>;
}

const { post } = Astro.props;
const { title, description, publishDate, tags = [], featured } = post.data;

// Format date for display
const formattedDate = new Intl.DateTimeFormat('en-US', {
  year: 'numeric',
  month: 'long',
  day: 'numeric'
}).format(publishDate);

// Calculate reading time (rough estimate)
const { Content } = await post.render();
const wordCount = post.body.split(/\s+/).length;
const readingTime = Math.ceil(wordCount / 200); // Average reading speed

// Generate breadcrumb navigation
const breadcrumbs = [
  { label: 'Home', href: '/' },
  { label: 'Blog', href: '/blog' },
  { label: title, href: `/blog/${post.slug}` }
];
---

<BaseLayout
  title={title}
  description={description}
  type="article"
  publishedTime={publishDate.toISOString()}
  tags={tags}
>
  <article class="blog-article">
    <!-- Breadcrumb Navigation -->
    <nav class="breadcrumb-nav" aria-label="Breadcrumb">
      <div class="container">
        <ol class="breadcrumb-list">
          {breadcrumbs.map((crumb, index) => (
            <li class="breadcrumb-item">
              {index < breadcrumbs.length - 1 ? (
                <>
                  <a href={crumb.href} class="breadcrumb-link">
                    {crumb.label}
                  </a>
                  <span class="breadcrumb-separator" aria-hidden="true">/</span>
                </>
              ) : (
                <span class="breadcrumb-current" aria-current="page">
                  {crumb.label}
                </span>
              )}
            </li>
          ))}
        </ol>
      </div>
    </nav>

    <!-- Article Header -->
    <header class="article-header">
      <div class="container">
        <div class="article-meta">
          <time class="article-date" datetime={publishDate.toISOString()}>
            {formattedDate}
          </time>
          <span class="article-reading-time">
            {readingTime} min read
          </span>
          {featured && (
            <span class="featured-badge">Featured</span>
          )}
        </div>
        
        <h1 class="article-title">{title}</h1>
        
        <p class="article-description">{description}</p>
        
        {tags.length > 0 && (
          <div class="article-tags">
            {tags.map(tag => (
              <span class="tag-badge">{tag}</span>
            ))}
          </div>
        )}
      </div>
    </header>

    <!-- Article Content -->
    <div class="article-content">
      <div class="container">
        <div class="prose">
          <Content />
        </div>
      </div>
    </div>

    <!-- Article Footer -->
    <footer class="article-footer">
      <div class="container">
        <div class="article-actions">
          <a href="/blog" class="back-link">
            ‚Üê Back to Blog
          </a>
          
          <div class="share-links">
            <span class="share-label">Share:</span>
            <a 
              href={`https://twitter.com/intent/tweet?text=${encodeURIComponent(title)}&url=${encodeURIComponent(Astro.url.href)}`}
              target="_blank"
              rel="noopener noreferrer"
              class="share-link"
              aria-label="Share on Twitter"
            >
              Twitter
            </a>
            <a 
              href={`https://www.linkedin.com/sharing/share-offsite/?url=${encodeURIComponent(Astro.url.href)}`}
              target="_blank"
              rel="noopener noreferrer"
              class="share-link"
              aria-label="Share on LinkedIn"
            >
              LinkedIn
            </a>
          </div>
        </div>
      </div>
    </footer>
  </article>
</BaseLayout>

<style>
  .container {
    max-width: 800px;
    margin: 0 auto;
    padding: 0 var(--space-4);
  }

  /* Breadcrumb Navigation */
  .breadcrumb-nav {
    background-color: var(--color-bg-secondary);
    border-bottom: 1px solid var(--color-border);
    padding: var(--space-3) 0;
  }

  .breadcrumb-list {
    display: flex;
    align-items: center;
    gap: var(--space-2);
    margin: 0;
    padding: 0;
    list-style: none;
    font-size: var(--text-sm);
  }

  .breadcrumb-item {
    display: flex;
    align-items: center;
    gap: var(--space-2);
  }

  .breadcrumb-link {
    color: var(--color-text-secondary);
    transition: color var(--transition-fast);
  }

  .breadcrumb-link:hover {
    color: var(--color-accent);
  }

  .breadcrumb-separator {
    color: var(--color-text-muted);
  }

  .breadcrumb-current {
    color: var(--color-text-primary);
    font-weight: var(--font-medium);
  }

  /* Article Header */
  .article-header {
    padding: var(--space-12) 0 var(--space-8);
    text-align: center;
  }

  .article-meta {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: var(--space-4);
    margin-bottom: var(--space-6);
    font-size: var(--text-sm);
    color: var(--color-text-secondary);
  }

  .article-date,
  .article-reading-time {
    display: flex;
    align-items: center;
    gap: var(--space-1);
  }

  .featured-badge {
    background-color: var(--color-accent);
    color: var(--color-text-primary);
    padding: var(--space-1) var(--space-3);
    border-radius: var(--radius-full);
    font-size: var(--text-xs);
    font-weight: var(--font-medium);
    text-transform: uppercase;
    letter-spacing: 0.05em;
  }

  .article-title {
    font-size: var(--text-4xl);
    font-weight: var(--font-bold);
    line-height: var(--leading-tight);
    color: var(--color-text-primary);
    margin-bottom: var(--space-4);
  }

  .article-description {
    font-size: var(--text-lg);
    color: var(--color-text-secondary);
    line-height: var(--leading-relaxed);
    margin-bottom: var(--space-6);
    max-width: 600px;
    margin-left: auto;
    margin-right: auto;
  }

  .article-tags {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    gap: var(--space-2);
  }

  .tag-badge {
    background-color: var(--color-bg-tertiary);
    color: var(--color-text-secondary);
    padding: var(--space-1) var(--space-3);
    border-radius: var(--radius-full);
    font-size: var(--text-sm);
    font-weight: var(--font-medium);
    border: 1px solid var(--color-border);
  }

  /* Article Content */
  .article-content {
    padding-bottom: var(--space-12);
  }

  .prose {
    max-width: none;
  }

  /* Enhanced prose styles for blog content */
  .prose h1,
  .prose h2,
  .prose h3,
  .prose h4,
  .prose h5,
  .prose h6 {
    margin-top: var(--space-8);
    margin-bottom: var(--space-4);
    color: var(--color-text-primary);
  }

  .prose h1 {
    font-size: var(--text-3xl);
    border-bottom: 2px solid var(--color-border);
    padding-bottom: var(--space-2);
  }

  .prose h2 {
    font-size: var(--text-2xl);
  }

  .prose h3 {
    font-size: var(--text-xl);
  }

  .prose p {
    margin-bottom: var(--space-4);
    line-height: var(--leading-relaxed);
  }

  .prose pre {
    margin: var(--space-6) 0;
    border-radius: var(--radius-base);
    overflow-x: auto;
    background-color: var(--color-code-bg, #1e1e1e) !important;
    border: 1px solid var(--color-border);
    position: relative;
  }

  .prose pre .copy-button {
    position: absolute;
    top: var(--space-2);
    right: var(--space-2);
    background-color: var(--color-bg-tertiary);
    color: var(--color-text-secondary);
    padding: var(--space-1) var(--space-2);
    border: 1px solid var(--color-border);
    border-radius: var(--radius-base);
    font-size: var(--text-xs);
    font-weight: var(--font-medium);
    cursor: pointer;
    opacity: 0;
    transition: all var(--transition-fast);
    z-index: 10;
  }

  .prose pre:hover .copy-button {
    opacity: 1;
  }

  .prose pre .copy-button:hover {
    background-color: var(--color-bg-primary);
    color: var(--color-text-primary);
    border-color: var(--color-border-light);
  }

  .prose pre .copy-button.copied {
    background-color: var(--color-success, #10b981);
    color: white;
    border-color: var(--color-success, #10b981);
  }

  .prose code {
    font-size: 0.9em;
    font-family: var(--font-mono);
  }

  .prose :not(pre) > code {
    background-color: var(--color-bg-secondary);
    color: var(--color-accent);
    padding: 0.125em 0.25em;
    border-radius: var(--radius-base);
    font-size: 0.875em;
    border: 1px solid var(--color-border);
  }

  .prose blockquote {
    border-left: 4px solid var(--color-accent);
    padding-left: var(--space-4);
    margin: var(--space-6) 0;
    font-style: italic;
    color: var(--color-text-secondary);
  }

  .prose ul,
  .prose ol {
    margin-bottom: var(--space-4);
    padding-left: var(--space-6);
  }

  .prose li {
    margin-bottom: var(--space-2);
  }

  /* Article Footer */
  .article-footer {
    border-top: 1px solid var(--color-border);
    padding: var(--space-8) 0;
  }

  .article-actions {
    display: flex;
    justify-content: space-between;
    align-items: center;
    flex-wrap: wrap;
    gap: var(--space-4);
  }

  .back-link {
    color: var(--color-accent);
    font-weight: var(--font-medium);
    transition: color var(--transition-fast);
  }

  .back-link:hover {
    color: var(--color-accent-hover);
  }

  .share-links {
    display: flex;
    align-items: center;
    gap: var(--space-3);
  }

  .share-label {
    color: var(--color-text-secondary);
    font-size: var(--text-sm);
  }

  .share-link {
    color: var(--color-text-secondary);
    font-size: var(--text-sm);
    padding: var(--space-2) var(--space-3);
    border-radius: var(--radius-base);
    transition: all var(--transition-fast);
  }

  .share-link:hover {
    color: var(--color-accent);
    background-color: var(--color-bg-secondary);
  }

  /* Responsive Design */
  @media (max-width: 768px) {
    .article-meta {
      flex-direction: column;
      gap: var(--space-2);
    }

    .article-title {
      font-size: var(--text-3xl);
    }

    .article-actions {
      flex-direction: column;
      align-items: flex-start;
    }

    .share-links {
      align-self: stretch;
      justify-content: space-between;
    }
  }

  /* Focus styles for accessibility */
  .breadcrumb-link:focus-visible,
  .back-link:focus-visible,
  .share-link:focus-visible {
    outline: 2px solid var(--color-accent);
    outline-offset: 2px;
  }
</style>

<script>
  // Add copy functionality to code blocks
  document.addEventListener('DOMContentLoaded', function() {
    const codeBlocks = document.querySelectorAll('.prose pre');
    
    codeBlocks.forEach((pre, index) => {
      // Create a unique ID for each code block
      const codeId = `code-block-${index}`;
      pre.setAttribute('data-code-id', codeId);
      
      // Create copy button element
      const copyButton = document.createElement('button');
      copyButton.className = 'copy-button';
      copyButton.innerHTML = `
        <svg width="14" height="14" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
          <rect width="14" height="14" x="8" y="8" rx="2" ry="2"/>
          <path d="M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2"/>
        </svg>
        <span>Copy</span>
      `;
      copyButton.setAttribute('aria-label', 'Copy code to clipboard');
      copyButton.setAttribute('title', 'Copy code');
      
      // Add copy button to the pre element
      pre.appendChild(copyButton);
      
      // Add click handler for copy functionality
      copyButton.addEventListener('click', async function(e) {
        e.preventDefault();
        e.stopPropagation();
        
        const codeElement = pre.querySelector('code');
        if (!codeElement) return;
        
        const codeText = codeElement.textContent || '';
        
        try {
          // Try using the modern clipboard API first
          if (navigator.clipboard && window.isSecureContext) {
            await navigator.clipboard.writeText(codeText);
          } else {
            // Fallback for older browsers
            const textarea = document.createElement('textarea');
            textarea.value = codeText;
            textarea.style.position = 'fixed';
            textarea.style.left = '-999999px';
            textarea.style.top = '-999999px';
            document.body.appendChild(textarea);
            textarea.focus();
            textarea.select();
            document.execCommand('copy');
            textarea.remove();
          }
          
          // Show success feedback
          this.classList.add('copied');
          this.innerHTML = `
            <svg width="14" height="14" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
              <polyline points="20,6 9,17 4,12"/>
            </svg>
            <span>Copied!</span>
          `;
          
          // Reset after 2 seconds
          setTimeout(() => {
            this.classList.remove('copied');
            this.innerHTML = `
              <svg width="14" height="14" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                <rect width="14" height="14" x="8" y="8" rx="2" ry="2"/>
                <path d="M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2"/>
              </svg>
              <span>Copy</span>
            `;
          }, 2000);
          
        } catch (err) {
          console.error('Failed to copy code:', err);
          
          // Show error feedback
          this.innerHTML = `
            <svg width="14" height="14" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
              <circle cx="12" cy="12" r="10"/>
              <line x1="15" y1="9" x2="9" y2="15"/>
              <line x1="9" y1="9" x2="15" y2="15"/>
            </svg>
            <span>Failed</span>
          `;
          
          setTimeout(() => {
            this.innerHTML = `
              <svg width="14" height="14" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                <rect width="14" height="14" x="8" y="8" rx="2" ry="2"/>
                <path d="M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2"/>
              </svg>
              <span>Copy</span>
            `;
          }, 2000);
        }
      });
    });
  });
</script>