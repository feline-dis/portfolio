---
// Base layout component with navigation, footer, and comprehensive SEO
import Navigation from "../components/Navigation.astro";
import "../styles/global.css";
import Analytics from "@vercel/analytics/astro";

export interface Props {
  title?: string;
  description?: string;
  image?: string;
  type?: "website" | "article";
  publishedTime?: string;
  modifiedTime?: string;
  tags?: string[];
  canonicalURL?: string;
  keywords?: string[];
  author?: string;
  noindex?: boolean;
}

const {
  title = "Portfolio",
  description = "Personal portfolio website showcasing software projects and technical articles",
  image = "/favicon.svg",
  type = "website",
  publishedTime,
  modifiedTime,
  tags = [],
  canonicalURL,
  keywords = [],
  author = "Portfolio Developer",
  noindex = false,
} = Astro.props;

// Get current URL for canonical and social sharing
const currentURL = canonicalURL || Astro.url.href;
const fullTitle = title === "Portfolio" ? title : `${title} | Portfolio`;

// Construct absolute URLs for social sharing
const siteURL = Astro.site || new URL("http://localhost:4321");
const imageURL = new URL(image, siteURL).href;

// Generate structured data for better search visibility
const structuredData = {
  "@context": "https://schema.org",
  "@type": type === "article" ? "Article" : "WebSite",
  name: fullTitle,
  description: description,
  url: currentURL,
  image: imageURL,
  author: {
    "@type": "Person",
    name: author,
  },
  ...(type === "article" &&
    publishedTime && {
      datePublished: publishedTime,
      dateModified: modifiedTime || publishedTime,
    }),
  ...(type === "website" && {
    potentialAction: {
      "@type": "SearchAction",
      target: {
        "@type": "EntryPoint",
        urlTemplate: `${siteURL.origin}/search?q={search_term_string}`,
      },
      "query-input": "required name=search_term_string",
    },
  }),
};

// Social media and contact links
const socialLinks = [
  { name: "GitHub", url: "https://github.com/feline-dis", icon: "github" },
  {
    name: "LinkedIn",
    url: "https://www.linkedin.com/in/jon-hansen-dev/",
    icon: "linkedin",
  },
  { name: "Email", url: "mailto:jonhansen.dev@gmail.com", icon: "email" },
];

// Generate meta keywords
const metaKeywords = [
  "portfolio",
  "software developer",
  "web development",
  "programming",
  "projects",
  "blog",
  ...keywords,
  ...tags,
]
  .filter(Boolean)
  .join(", ");
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="generator" content={Astro.generator} />

    <!-- Favicon -->
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />

    <!-- Primary Meta Tags -->
    <title>{fullTitle}</title>
    <meta name="title" content={fullTitle} />
    <meta name="description" content={description} />
    {metaKeywords && <meta name="keywords" content={metaKeywords} />}
    <meta name="author" content={author} />
    <meta name="language" content="en" />
    <meta name="theme-color" content="#1a1a1a" />

    <!-- Canonical URL -->
    <link rel="canonical" href={currentURL} />

    <!-- Open Graph / Facebook -->
    <meta property="og:type" content="website" />
    <meta property="og:url" content="https://www.jonhansen.dev/" />
    <meta property="og:title" content="Home | Portfolio" />
    <meta
      property="og:description"
      content="Hey there! Check out what I've been building and the random tech stuff I write about"
    />
    <meta property="og:image" content="/images/site-preview.png" />

    <!-- X (Twitter) -->
    <meta property="twitter:card" content="summary_large_image" />
    <meta property="twitter:url" content="https://www.jonhansen.dev/" />
    <meta property="twitter:title" content="Home | Portfolio" />
    <meta
      property="twitter:description"
      content="Hey there! Check out what I've been building and the random tech stuff I write about"
    />
    <meta property="twitter:image" content="/images/site-preview.png" />

    <!-- Article specific meta tags -->
    {
      type === "article" && publishedTime && (
        <meta property="article:published_time" content={publishedTime} />
      )
    }
    {
      type === "article" && modifiedTime && (
        <meta property="article:modified_time" content={modifiedTime} />
      )
    }
    {
      type === "article" && author && (
        <meta property="article:author" content={author} />
      )
    }
    {
      type === "article" &&
        tags.length > 0 &&
        tags.map((tag) => <meta property="article:tag" content={tag} />)
    }

    <!-- SEO and Indexing -->
    <meta
      name="robots"
      content={noindex
        ? "noindex, nofollow"
        : "index, follow, max-image-preview:large, max-snippet:-1, max-video-preview:-1"}
    />
    <meta
      name="googlebot"
      content={noindex ? "noindex, nofollow" : "index, follow"}
    />

    <!-- Performance and Security -->
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="format-detection" content="telephone=no" />
    <meta name="msapplication-TileColor" content="#1a1a1a" />

    <!-- Structured Data -->
    <script
      type="application/ld+json"
      is:inline
      set:html={JSON.stringify(structuredData)}
    />

    <!-- Vercel Analytics -->
    <script>
      // Load and initialize Vercel Analytics
      (async () => {
        try {
          const { inject } = await import("@vercel/analytics");
          inject();
        } catch (error) {
          console.warn("Failed to load Vercel Analytics:", error);
        }
      })();
    </script>

    <!-- Preload critical fonts -->
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />

    <!-- Preload critical resources -->
    <link
      rel="preload"
      href="https://fonts.gstatic.com/s/inter/v12/UcCO3FwrK3iLTeHuS_fvQtMwCp50KnMw2boKoduKmMEVuLyfAZ9hiA.woff2"
      as="font"
      type="font/woff2"
      crossorigin
    />

    <!-- Global Styles will be imported via Astro's style processing -->

    <!-- Performance monitoring and accessibility initialization script -->
    <script>
      // Inline critical performance monitoring
      if (typeof window !== "undefined") {
        // Measure page load time
        window.addEventListener("load", function () {
          const loadTime = performance.now();
          console.log("Page load time:", loadTime.toFixed(2) + "ms");
        });

        // Optimize font loading
        if ("fonts" in document) {
          document.fonts.ready.then(function () {
            console.log("Fonts loaded");
          });
        }

        // Initialize performance optimizations
        try {
          // Simple performance monitoring without external module
          if ("PerformanceObserver" in window) {
            const observer = new PerformanceObserver((list) => {
              const entries = list.getEntries();
              entries.forEach((entry) => {
                if (entry.entryType === "largest-contentful-paint") {
                  console.log("LCP:", entry.startTime.toFixed(2) + "ms");
                }
              });
            });
            observer.observe({ entryTypes: ["largest-contentful-paint"] });
          }
        } catch (err) {
          console.warn("Performance monitoring not supported");
        }

        // Initialize accessibility features
        // Add focus-visible polyfill behavior for older browsers
        if (!CSS.supports("selector(:focus-visible)")) {
          document.addEventListener("keydown", (e) => {
            if (e.key === "Tab") {
              document.body.classList.add("keyboard-navigation");
            }
          });

          document.addEventListener("mousedown", () => {
            document.body.classList.remove("keyboard-navigation");
          });
        }

        // Global escape key handler
        document.addEventListener("keydown", (event) => {
          if (event.key === "Escape") {
            // Close any open modals, menus, etc.
            const openElements = document.querySelectorAll(
              '[aria-expanded="true"]',
            );
            openElements.forEach((element) => {
              if (element instanceof HTMLElement) {
                element.click(); // Trigger close
              }
            });
          }
        });

        // Announce page changes for screen readers
        let currentPath = window.location.pathname;
        const observer = new MutationObserver(() => {
          if (window.location.pathname !== currentPath) {
            currentPath = window.location.pathname;
            const title = document.title;
            // Simple screen reader announcement
            const announcer = document.createElement("div");
            announcer.setAttribute("aria-live", "polite");
            announcer.setAttribute("aria-atomic", "true");
            announcer.className = "sr-only";
            announcer.textContent = `Navigated to ${title}`;
            document.body.appendChild(announcer);
            setTimeout(() => {
              if (document.body.contains(announcer)) {
                document.body.removeChild(announcer);
              }
            }, 1000);
          }
        });

        observer.observe(document.body, {
          childList: true,
          subtree: true,
        });

        // Run accessibility tests in development
        if (import.meta.env.DEV) {
          // Simple color contrast test
          const testColorContrast = () => {
            const combinations = [
              {
                name: "Primary text on primary bg",
                fg: "#ffffff",
                bg: "#1a1a1a",
              },
              {
                name: "Secondary text on primary bg",
                fg: "#d1d5db",
                bg: "#1a1a1a",
              },
              {
                name: "Muted text on primary bg",
                fg: "#9ca3af",
                bg: "#1a1a1a",
              },
              { name: "Accent on primary bg", fg: "#60a5fa", bg: "#1a1a1a" },
            ];

            const calculateRatio = (fg: string, bg: string) => {
              const getLuminance = (color: string) => {
                const hex = color.replace("#", "");
                const r = parseInt(hex.substring(0, 2), 16) / 255;
                const g = parseInt(hex.substring(2, 4), 16) / 255;
                const b = parseInt(hex.substring(4, 6), 16) / 255;
                const sRGB = [r, g, b].map((c) =>
                  c <= 0.03928 ? c / 12.92 : Math.pow((c + 0.055) / 1.055, 2.4),
                );
                return 0.2126 * sRGB[0] + 0.7152 * sRGB[1] + 0.0722 * sRGB[2];
              };
              const lum1 = getLuminance(fg);
              const lum2 = getLuminance(bg);
              return (
                (Math.max(lum1, lum2) + 0.05) / (Math.min(lum1, lum2) + 0.05)
              );
            };

            console.group("🎨 Color Contrast Test Results");
            combinations.forEach((combo) => {
              const ratio = calculateRatio(combo.fg, combo.bg);
              const passes = ratio >= 4.5;
              console.log(
                `${passes ? "✅" : "❌"} ${combo.name}: ${ratio.toFixed(2)}:1`,
              );
            });
            console.groupEnd();
          };

          setTimeout(testColorContrast, 1000);
        }
      }
    </script>

    <!-- Skip links and accessibility styles -->
    <style>
      /* Skip links for keyboard navigation */
      .skip-links {
        position: absolute;
        top: -100px;
        left: 0;
        z-index: 9999;
        display: flex;
        gap: var(--space-2);
        padding: var(--space-2);
      }

      .skip-link {
        background: var(--color-accent);
        color: var(--color-text-primary);
        padding: var(--space-2) var(--space-4);
        text-decoration: none;
        border-radius: var(--radius-base);
        font-weight: var(--font-medium);
        font-size: var(--text-sm);
        border: 2px solid var(--color-accent);
        transition: all var(--transition-fast);
      }

      .skip-links:focus-within {
        top: var(--space-2);
      }

      .skip-link:focus {
        outline: 2px solid var(--color-text-primary);
        outline-offset: 2px;
      }

      .skip-link:hover {
        background: var(--color-accent-hover);
        border-color: var(--color-accent-hover);
      }

      /* Enhanced focus indicators */
      :focus-visible {
        outline: 2px solid var(--color-accent);
        outline-offset: 2px;
        border-radius: var(--radius-base);
      }

      /* High contrast mode support */
      @media (prefers-contrast: high) {
        .skip-link {
          border-width: 3px;
          font-weight: var(--font-bold);
        }
      }

      /* Reduced motion support */
      @media (prefers-reduced-motion: reduce) {
        .skip-link {
          transition: none;
        }
      }
    </style>
  </head>

  <body>
    <Analytics />

    <!-- Skip links for accessibility -->
    <div class="skip-links">
      <a href="#main-content" class="skip-link">Skip to main content</a>
      <a href="#navigation" class="skip-link">Skip to navigation</a>
      <a href="#footer" class="skip-link">Skip to footer</a>
    </div>

    <!-- Header with Navigation -->
    <header role="banner">
      <div id="navigation">
        <Navigation currentPath={Astro.url.pathname} />
      </div>
    </header>

    <!-- Main Content -->
    <main id="main-content" role="main">
      <slot />
    </main>

    <!-- Footer -->
    <footer id="footer" class="site-footer" role="contentinfo">
      <div class="footer-container">
        <div class="footer-content">
          <!-- Footer Brand -->
          <div class="footer-brand">
            <h3 class="footer-title">Portfolio</h3>
            <p class="footer-description">
              Jon Hansen is a Full-Stack Software Engineer based in Gilbert,
              Arizona, with a strong track record of building and maintaining
              scalable APIs and modern, responsive front-end interfaces. Over
              four years of professional experience, most recently at NERD Power
              LLC. Proficient in JavaScript (ES6+), Node.js, React, Next.js,
              PostgreSQL, AWS, and more.
            </p>
          </div>

          <!-- Quick Links -->
          <div class="footer-section">
            <h4 class="footer-section-title">Quick Links</h4>
            <ul class="footer-links">
              <li><a href="/" class="footer-link">Home</a></li>
              <li><a href="/projects" class="footer-link">Projects</a></li>
              <li><a href="/blog" class="footer-link">Blog</a></li>
              <li><a href="/about" class="footer-link">About</a></li>
            </ul>
          </div>

          <!-- Social Links -->
          <div class="footer-section">
            <h4 class="footer-section-title">Connect</h4>
            <ul class="footer-social">
              {
                socialLinks.map(({ name, url, icon }) => (
                  <li>
                    <a
                      href={url}
                      class="footer-social-link"
                      target="_blank"
                      rel="noopener noreferrer"
                      aria-label={`Visit ${name} profile`}
                    >
                      <span class="social-icon" data-icon={icon} />
                      {name}
                    </a>
                  </li>
                ))
              }
            </ul>
          </div>
        </div>

        <!-- Footer Bottom -->
        <div class="footer-bottom">
          <p class="footer-copyright">
            © {new Date().getFullYear()} Portfolio. Built with
            <a
              href="https://astro.build"
              target="_blank"
              rel="noopener noreferrer"
              class="footer-link">Astro</a
            >.
          </p>
        </div>
      </div>
    </footer>
  </body>
</html>

<style>
  /* Footer Styles */
  .site-footer {
    background-color: var(--color-bg-secondary);
    border-top: 1px solid var(--color-border);
    margin-top: auto;
  }

  .footer-container {
    max-width: 1280px;
    margin: 0 auto;
    padding: var(--space-12) var(--space-4) var(--space-6);
  }

  .footer-content {
    display: grid;
    grid-template-columns: 1fr;
    gap: var(--space-8);
    margin-bottom: var(--space-8);
  }

  .footer-brand {
    max-width: 400px;
  }

  .footer-title {
    font-size: var(--text-xl);
    font-weight: var(--font-bold);
    color: var(--color-text-primary);
    margin-bottom: var(--space-3);
  }

  .footer-description {
    color: var(--color-text-secondary);
    line-height: var(--leading-relaxed);
    margin-bottom: 0;
  }

  .footer-section-title {
    font-size: var(--text-base);
    font-weight: var(--font-semibold);
    color: var(--color-text-primary);
    margin-bottom: var(--space-4);
  }

  .footer-links,
  .footer-social {
    list-style: none;
    padding: 0;
    margin: 0;
  }

  .footer-links li,
  .footer-social li {
    margin-bottom: var(--space-2);
  }

  .footer-link,
  .footer-social-link {
    color: var(--color-text-secondary);
    transition: color var(--transition-fast);
    display: inline-flex;
    align-items: center;
    gap: var(--space-2);
  }

  .footer-link:hover,
  .footer-social-link:hover {
    color: var(--color-accent);
  }

  .social-icon {
    width: 1rem;
    height: 1rem;
    display: inline-block;
  }

  .social-icon[data-icon="github"]::before {
    content: "⚡";
  }

  .social-icon[data-icon="linkedin"]::before {
    content: "💼";
  }

  .social-icon[data-icon="email"]::before {
    content: "✉️";
  }

  .footer-bottom {
    padding-top: var(--space-6);
    border-top: 1px solid var(--color-border);
    text-align: center;
  }

  .footer-copyright {
    color: var(--color-text-muted);
    font-size: var(--text-sm);
    margin: 0;
  }

  .footer-copyright .footer-link {
    color: var(--color-accent);
    font-weight: var(--font-medium);
  }

  /* Responsive Design */
  @media (min-width: 768px) {
    .footer-content {
      grid-template-columns: 2fr 1fr 1fr;
      gap: var(--space-12);
    }
  }

  /* Ensure footer sticks to bottom */
  html,
  body {
    height: 100%;
  }

  body {
    display: flex;
    flex-direction: column;
  }

  main {
    flex: 1;
  }

  /* Focus styles for accessibility */
  .footer-link:focus-visible,
  .footer-social-link:focus-visible {
    outline: 2px solid var(--color-accent);
    outline-offset: 2px;
    border-radius: var(--radius-base);
  }
</style>
